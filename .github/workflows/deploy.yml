name: Deploy
on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        default: "staging"
        options:
          - staging
          - production

env:
  NODE_VERSION: 20
  FRONTEND_APP_INTERNAL_PORT: 3000
  MEDIA_S3_REGION: eu-west-3

jobs:
  check:
    name: Check
    uses: ./.github/workflows/check.yml
    secrets: inherit

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: check
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/version
      - uses: softprops/action-gh-release@v1
    permissions:
      contents: write

  define-env:
    name: Define Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.define-env.outputs.environment }}
      fly_app_frontend: ${{ steps.define-env.outputs.fly_app_frontend }}
      fly_app_cms: ${{ steps.define-env.outputs.fly_app_cms }}
      domain_frontend: ${{ steps.define-env.outputs.domain_frontend }}
      domain_cms: ${{ steps.define-env.outputs.domain_cms }}
      s3_bucket: ${{ steps.define-env.outputs.s3_bucket }}
      imagekit_base_url: ${{ steps.define-env.outputs.imagekit_base_url }}
    steps:
      - run: |
          environment=${{ inputs.environment || 'staging' }}
          echo "environment=$environment" >> "$GITHUB_OUTPUT"

          case $environment in
            production)
              echo "fly_app_frontend=lapuertahostels-2" >> "$GITHUB_OUTPUT"
              echo "fly_app_cms=lapuertahostels-cms" >> "$GITHUB_OUTPUT"
              echo "domain_frontend=lapuertahostels.co" >> "$GITHUB_OUTPUT"
              echo "domain_cms=admin.lapuertahostels.co" >> "$GITHUB_OUTPUT"
              echo "s3_bucket=lapuertahostels-media" >> "$GITHUB_OUTPUT"
              echo "imagekit_base_url=https://ik.imagekit.io/lapuertahostels" >> "$GITHUB_OUTPUT"
              ;;
            staging)
              echo "fly_app_frontend=lapuertahostels-staging" >> "$GITHUB_OUTPUT"
              echo "fly_app_cms=lapuertahostels-cms-staging" >> "$GITHUB_OUTPUT"
              echo "domain_frontend=staging.lapuertahostels.co" >> "$GITHUB_OUTPUT"
              echo "domain_cms=admin.staging.lapuertahostels.co" >> "$GITHUB_OUTPUT"
              echo "s3_bucket=lapuertahostels-media-staging" >> "$GITHUB_OUTPUT"
              echo "imagekit_base_url=https://ik.imagekit.io/lapuertahostels/staging" >> "$GITHUB_OUTPUT"
              ;;
          esac
        id: define-env

  deploy-frontend:
    name: "Frontend / Deploy"
    runs-on: ubuntu-latest
    needs: [check, define-env]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.3.18
      - uses: ./.github/actions/version
        id: version
      - run: |
          flyctl deploy \
            --app ${{ needs.define-env.outputs.fly_app_frontend }} \
            --remote-only \
            --image-label v${{ steps.version.outputs.version }} \
            --env ANALYTICS_DOMAIN=${{ needs.define-env.outputs.domain_frontend }} \
            --env CANONICAL_HOSTNAME=www.${{ needs.define-env.outputs.domain_frontend }} \
            --env IMAGEKIT_BASE_URL=${{ needs.define-env.outputs.imagekit_base_url }} \
            --env PAYLOAD_CMS_BASE_URL=https://${{ needs.define-env.outputs.domain_cms }} \
        working-directory: frontend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-cms:
    name: "CMS / Deploy"
    runs-on: ubuntu-latest
    needs: [check, define-env]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.3.18
      - uses: ./.github/actions/version
        id: version
      - run: |
          flyctl deploy \
            --app ${{ needs.define-env.outputs.fly_app_cms }} \
            --remote-only \
            --image-label v${{ steps.version.outputs.version }} \
            --env CACHE_REFRESH_TARGET_TYPE=fly \
            --env CACHE_REFRESH_TARGET_ARG=${{ needs.define-env.outputs.fly_app_frontend }},${{ env.FRONTEND_APP_INTERNAL_PORT }} \
            --env MEDIA_S3_BUCKET=${{ needs.define-env.outputs.s3_bucket }} \
            --env MEDIA_S3_REGION=${{ env.MEDIA_S3_REGION }} \
            --build-arg PAYLOAD_PUBLIC_LIVE_PREVIEW_URL=https://${{ needs.define-env.outputs.domain_frontend }} \
        working-directory: cms
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  prime-frontend-cache:
    name: "Prime Frontend Cache"
    runs-on: ubuntu-latest
    needs: [define-env, deploy-frontend, deploy-cms]
    environment:
      name: ${{ needs.define-env.outputs.environment }}
      url: https://${{ needs.define-env.outputs.domain_frontend }}/
    steps:
      - run: |
          curl "https://${{ needs.define-env.outputs.domain_cms }}/api/prime-frontend-cache" \
            -f -s -S \
            -X POST \
            -H "Authorization: users API-Key ${{ secrets.CICD_USER_API_KEY }}"
