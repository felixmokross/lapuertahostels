name: Deploy
on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        default: "staging"
        options:
          - staging
          - production

env:
  NODE_VERSION: 20

defaults:
  run:
    working-directory: frontend

jobs:
  version:
    uses: ./.github/workflows/version.yml
  check:
    uses: ./.github/workflows/check.yml
    secrets: inherit
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: check
    steps:
      - uses: softprops/action-gh-release@v1
    permissions:
      contents: write
  define-env:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.define-env.outputs.environment }}
      fly_app: ${{ steps.define-env.outputs.fly_app }}
      domain: ${{ steps.define-env.outputs.domain }}
      imagekit_base_url: ${{ steps.define-env.outputs.imagekit_base_url }}
    steps:
      - id: define-env
        run: |
          environment=${{ inputs.environment || 'staging' }}
          echo "environment=$environment" >> "$GITHUB_OUTPUT"

          case $environment in
            production)
              echo "fly_app=lapuertahostels-2" >> "$GITHUB_OUTPUT"
              echo "domain=lapuertahostels.co" >> "$GITHUB_OUTPUT"
              echo "imagekit_base_url=https://ik.imagekit.io/lapuertahostels" >> "$GITHUB_OUTPUT"
              ;;
            staging)
              echo "fly_app=lapuertahostels-staging" >> "$GITHUB_OUTPUT"
              echo "domain=lapuertahostels-staging.fly.dev" >> "$GITHUB_OUTPUT"
              echo "imagekit_base_url=https://ik.imagekit.io/lapuertahostels/staging" >> "$GITHUB_OUTPUT"
              ;;
          esac
        working-directory: .
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.define-env.outputs.environment }}
      url: https://${{ needs.define-env.outputs.domain }}/
    needs: [check, version, define-env]
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.1.117
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm version ${{ needs.version.outputs.version }} --git-tag-version false
      - run: |
          flyctl deploy \
            --app ${{ needs.define-env.outputs.fly_app }} \
            --remote-only \
            --image-label v${{ needs.version.outputs.version }} \
            --env ANALYTICS_DOMAIN=${{ needs.define-env.outputs.domain }} \
            --env IMAGEKIT_BASE_URL=${{ needs.define-env.outputs.imagekit_base_url }} \
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
