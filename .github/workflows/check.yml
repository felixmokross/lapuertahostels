name: Check
on:
  pull_request:
  workflow_call:
    secrets:
      CHROMATIC_PROJECT_TOKEN:
        required: true

env:
  NODE_VERSION: 20
  STORYBOOK_IMAGEKIT_BASE_URL: https://ik.imagekit.io/lapuertahostels/staging

jobs:
  frontend-lint:
    name: Frontend / Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: frontend
      - uses: ./.github/actions/populate-cms-types
      - run: npm run lint -- --max-warnings=0
        working-directory: frontend

  frontend-format:
    name: Frontend / Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: frontend
      - run: npm run check-format
        working-directory: frontend

  frontend-typecheck:
    name: Frontend / Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: frontend
      - uses: ./.github/actions/populate-cms-types
      - run: npm run typecheck
        working-directory: frontend

  frontend-unit-tests:
    name: Frontend / Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: frontend
      - uses: ./.github/actions/populate-cms-types
      - run: npm run test
        working-directory: frontend

  frontend-build:
    name: Frontend / Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: frontend
      - run: npm run build
        working-directory: frontend
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

  frontend-chromatic:
    name: Frontend / Chromatic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup
        with:
          working-directory: frontend
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitOnceUploaded: true
          onlyChanged: true
          workingDir: frontend
        env:
          STORYBOOK_IMAGEKIT_BASE_URL: ${{ env.STORYBOOK_IMAGEKIT_BASE_URL }}
          STORYBOOK_USE_IMAGE_CACHE_BUSTER: true

  cms-format:
    name: CMS / Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: cms
      - run: npm run check-format
        working-directory: cms

  cms-build:
    name: CMS / Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          working-directory: cms
      - uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/cms/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - run: npm run build
        working-directory: cms
      - uses: actions/upload-artifact@v4
        with:
          name: cms-build
          path: cms/.next
          include-hidden-files: true

  e2e-tests:
    name: End-to-End Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [frontend-build, cms-build]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: e2e
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: cms
      - uses: bahmutov/npm-install@v1
        with:
          working-directory: frontend
      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
      - uses: actions/download-artifact@v4
        with:
          name: cms-build
          path: cms/.next
      - name: Start database
        run: docker compose up -d && sleep 3
        working-directory: cms
      - run: |
          ls -la
          mv .next/static .next/standalone/.next/static

          PORT=3001 PAYLOAD_SECRET=$(openssl rand -hex 12) node .next/standalone/server.js &
        working-directory: cms
        env:
          ENABLE_E2E_USER: true
          DATABASE_URI: mongodb://localhost:27017/payload
          CACHE_REFRESH_TARGET_TYPE: single
          CACHE_REFRESH_TARGET: http://localhost:3000
          NEXT_PUBLIC_LIVE_PREVIEW_URL: http://localhost:3000
          MEDIA_S3_BUCKET: lapuertahostels-media-preview
          MEDIA_S3_REGION: eu-west-3
          MEDIA_S3_ACCESS_KEY_ID: ${{ secrets.PREVIEW_MEDIA_S3_ACCESS_KEY_ID }}
          MEDIA_S3_SECRET_ACCESS_KEY: ${{ secrets.PREVIEW_MEDIA_S3_SECRET_ACCESS_KEY }}
          IMAGEKIT_BASE_URL: https://ik.imagekit.io/lapuertahostels/preview
          OPENAI_API_KEY: ${{ secrets.PREVIEW_OPENAI_API_KEY }}
      - run: |
          SESSION_SECRET=$(openssl rand -hex 32) \
            npm start &
        working-directory: frontend
        env:
          IMAGEKIT_BASE_URL: https://ik.imagekit.io/lapuertahostels/preview
          PAYLOAD_CMS_BASE_URL: http://localhost:3001
          PAYLOAD_CMS_API_KEY: apikey
          CANONICAL_HOSTNAME: localhost
      - run: npx playwright install --with-deps chromium
        working-directory: e2e
      - run: npx playwright test
        working-directory: e2e
        env:
          FRONTEND_BASE_URL: http://localhost:3000
          CMS_BASE_URL: http://localhost:3001
          CMS_API_KEY: apikey
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30
